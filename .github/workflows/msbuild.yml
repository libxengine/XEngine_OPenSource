name: windows build workflows

on:
  push:
    branches: 
      - 'master'
  
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug ,Release]
        platform: [x86 ,x64]

    runs-on: windows-latest # 最新的 Windows 环境

    steps:
       # 检出您的主仓库代码
      - name: Checkout main repository code
        uses: actions/checkout@v4
        
       # 检出依赖的xengine仓库到指定的xengine目录
      - name: Checkout dependency repository (xengine)
        uses: actions/checkout@v4
        with:
          repository: libxengine/libxengine
          path: libxengine

      - name: vcpkg dependency repository
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: vcpkg     
         
      - name: vcpkg install (x86)
        if: matrix.platform == 'x86'  
        run: |
            cd vcpkg
            ./bootstrap-vcpkg.bat
            ./vcpkg.exe install sdl2:x86-windows
            ./vcpkg.exe integrate install
        shell: pwsh
      - name: vcpkg install (x64)
        if: matrix.platform == 'x64'  
        run: |
            cd vcpkg
            ./bootstrap-vcpkg.bat
            ./vcpkg.exe install sdl2:x64-windows
            ./vcpkg.exe integrate install
        shell: pwsh

      - name: Set up Dependency x86_64 Environment
        if: matrix.platform == 'x64'
        run: |
          echo "XENGINE_INCLUDE=${{ github.workspace }}/libxengine" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "XENGINE_LIB64=${{ github.workspace }}/libxengine/XEngine_Windows" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh
      - name: Set up Dependency x86_32 Environment
        if: matrix.platform == 'x86'
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/libxengine/libxengine/releases/latest" -Headers @{"Accept"="application/vnd.github.v3+json"}
          $latest_tag = $response.tag_name
          Write-Host "Latest Tag: $latest_tag"
    
          $url = "https://github.com/libxengine/libxengine/releases/download/$latest_tag/XEngine_Windows_x86-32.zip"
          Invoke-WebRequest -Uri $url -OutFile "XEngine_Windows_x86-32.zip"
          Expand-Archive -Path ./XEngine_Windows_x86-32.zip -DestinationPath ./XEngine_Windows -Force

          echo "XENGINE_INCLUDE=${{ github.workspace }}/XEngine_Windows" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "XENGINE_LIB32=${{ github.workspace }}/XEngine_Windows/XEngine_Windows" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh
        
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Solution
        run: msbuild XEngine_Source/XEngine.sln /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}