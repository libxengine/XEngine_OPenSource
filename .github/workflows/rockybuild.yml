name: rocky build workflows

on:
  push:
    branches:
      - 'master'

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    container:
      image: rockylinux/rockylinux:9.5
      options: --platform ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-24.04
            platform: linux/amd64
            artifact: x86-64
          - arch: arm64
            runner: ubuntu-24.04-arm 
            platform: linux/arm64
            artifact: Arm64

    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4

      - name: Checkout dependency repository (xengine)
        uses: actions/checkout@v4
        with:
          repository: libxengine/libxengine
          path: libxengine

      - name: Set TERM variable
        run: echo "TERM=xterm" >> $GITHUB_ENV
        
      - name: install system package
        run: |
            dnf update -y
            dnf install gcc g++ make git jq unzip wget -y

      - name: install xengine library
        run: |
            latest_tag=$(curl -s https://api.github.com/repos/libxengine/libxengine/releases/latest | jq -r .tag_name)
            wget https://github.com/libxengine/libxengine/releases/download/$latest_tag/XEngine_RockyLinux_9_${{ matrix.artifact }}.zip
            unzip ./XEngine_RockyLinux_9_${{ matrix.artifact }}.zip -d ./XEngine_RockyLinux_9_${{ matrix.artifact }}
            cd XEngine_RockyLinux_9_${{ matrix.artifact }}
            
            chmod 777 *
            ./XEngine_LINEnv.sh -i 3

      - name: make
        run: | 
            cd XEngine_Module
            cd jsoncpp
            make
            cd ..
            cd tinyxml2
            make
            cd ..
            cd XEngine_InfoReport
            make
            cd ..
            cd XEngine_Token
            make
            cd ..
            cd XEngine_MSGNotify
            make
            cd ..
            cd XEngine_AIApi
            make